// frontend/script.js (–í–µ—Ä—Å–∏—è 3.0 - –§–∏–Ω–∞–ª—å–Ω–∞—è, —Å –ø–æ—Å—Ç-–æ–±—Ä–∞–±–æ—Ç–∫–æ–π)

document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('chat-form');
    const userQuestionInput = document.getElementById('userQuestion');
    const responseBox = document.getElementById('response');
    const spinner = document.getElementById('spinner');
    
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const question = userQuestionInput.value.trim();
        if (!question) return;

        // --- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ UI ---
        if (spinner) spinner.style.display = 'block';
        responseBox.innerHTML = ''; // –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
        const submitBtn = document.getElementById('submitBtn');
        submitBtn.disabled = true;
        userQuestionInput.disabled = true;

        let fullAiText = ""; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ò–ò

        try {
            // --- –≠–¢–ê–ü 1: –ü–æ–ª—É—á–∞–µ–º "–∂–∏–≤–æ–π" —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò ---
            const streamResponse = await fetch('https://ai-lawyer.up.railway.app/ask', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ question }),
            });

            if (!streamResponse.ok) throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å—Ç—Ä–∏–º–∏–Ω–≥–µ: ${streamResponse.status}`);
            
            const reader = streamResponse.body.getReader();
            const decoder = new TextDecoder('utf-8');
            
            if (spinner) spinner.style.display = 'none'; // –ü—Ä—è—á–µ–º —Å–ø–∏–Ω–Ω–µ—Ä —Å –ø–µ—Ä–≤—ã–º –∂–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–º
            responseBox.style.whiteSpace = "pre-wrap"; // –í–ê–ñ–ù–û: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –¥–ª—è —Å—ã—Ä–æ–≥–æ —Ç–µ–∫—Å—Ç–∞

            while (true) {
                const { done, value } = await reader.read();
                if (done) break;
                
                const textChunk = decoder.decode(value, { stream: true });
                fullAiText += textChunk; // –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç
                responseBox.textContent = fullAiText; // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
            }
            
            // --- –≠–¢–ê–ü 2: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É ---
            responseBox.style.whiteSpace = "normal"; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            responseBox.innerHTML = '<div id="spinner-final" style="text-align:center; padding: 20px;"><p>–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π...</p><div class="loader"></div></div>';


            const processResponse = await fetch('https://ai-lawyer.up.railway.app/process-full-text', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ question: question, full_ai_text: fullAiText }),
            });

            if (!processResponse.ok) throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: ${processResponse.status}`);

            const data = await processResponse.json();
            
            // –ó–∞–º–µ–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π, –∫—Ä–∞—Å–∏–≤–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML
            responseBox.innerHTML = data.html;

        } catch (error) {
            if (spinner) spinner.style.display = 'none';
            responseBox.innerHTML = `<p style="color:red;">üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}</p>`;
        } finally {
            // --- –í–æ–∑–≤—Ä–∞—â–∞–µ–º UI –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ---
            submitBtn.disabled = false;
            userQuestionInput.disabled = false;
            userQuestionInput.focus();
        }
    });
});
